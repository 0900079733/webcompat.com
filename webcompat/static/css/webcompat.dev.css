/*----------Base----------*/

/*----------Variable----------*/

/* base */

/* theme */

:root {
  /*Dark Yellow*/
  /* Light Yellow */
  /* Dark Gray */
  /* Dark Light */
  /* Light red */
  /* Light green */
  /* Dark green */
  /* Light blue */
}

/* link */

:root {
  /* button opacity disabled*/
}

/* Custom media queries */

/*---------- font ----------*/

@font-face {
  font-family: 'icomoon';
  src: url('../font/icomoon/icomoon.eot?3er58o');
  src: url('../font/icomoon/icomoon.eot?#iefix3er58o') format('embedded-opentype'),
      url('../font/icomoon/icomoon.woff?3er58o') format('woff'),
      url('../font/icomoon/icomoon.ttf?3er58o') format('truetype'),
      url('../font/icomoon/icomoon.svg?3er58o#icomoon') format('svg');
  font-weight: normal;
  font-style: normal;
}

.icon {
  display: inline-block;
  font-family: 'icomoon';
  speak: none;
  text-align: center;
  font-style: normal;
  font-weight: normal;
  -webkit-font-feature-settings: normal;
  -moz-font-feature-settings: normal;
  font-feature-settings: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  vertical-align: middle;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-arrow-up:before {
  content: "\e600";
}

.icon-arrow-right:before {
  content: "\e601";
}

.icon-arrow-down:before {
  content: "\e602";
}

.icon-arrow-left:before {
  content: "\e603";
}

/*----------Vendor----------*/

/* http://prismjs.com/download.html?themes=prism&languages=markup+css+clike+javascript */

/**
 * prism.js default theme for JavaScript, CSS and HTML
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */

code[class*="language-"],
pre[class*="language-"] {
  color: black;
  text-shadow: 0 1px white;
  font-family: Consolas, Monaco, 'Andale Mono', monospace;
  direction: ltr;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

pre[class*="language-"]::-moz-selection,
pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection,
code[class*="language-"] ::-moz-selection {
  text-shadow: none;
  background: #b3d4fc;
}

pre[class*="language-"]::selection,
pre[class*="language-"] ::selection,
code[class*="language-"]::selection,
code[class*="language-"] ::selection {
  text-shadow: none;
  background: #b3d4fc;
}

@media print {
  code[class*="language-"],
  pre[class*="language-"] {
    text-shadow: none;
  }
}

/* Code blocks */

pre[class*="language-"] {
  padding: 1em;
  margin: .5em 0;
  overflow: auto;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background: #f5f2f0;
}

/* Inline code */

:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: slategray;
}

.token.punctuation {
  color: #999;
}

.namespace {
  opacity: .7;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol {
  color: #905;
}

.token.selector,
.token.attr-name,
.token.string,
.token.builtin {
  color: #690;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
  color: #a67f59;
  background: hsla(0,0%,100%,.5);
}

.token.atrule,
.token.attr-value,
.token.keyword {
  color: #07a;
}

.token.function {
  color: #DD4A68;
}

.token.regex,
.token.important {
  color: #e90;
}

.token.important {
  font-weight: bold;
}

.token.entity {
  cursor: help;
}

/*----------Component----------*/

/*----------Button----------*/

.Button {
  display: inline-block;
  background-color: transparent;
  margin-bottom: .5em;
  padding: .5em 2em;
  text-decoration: none !important;
  font-weight: 700;
  border-radius: 20px;
  color: #000;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  background-image: none;
  white-space: nowrap;
  font-size: .8;
  line-height: normal;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
}

/**
* Remove excess padding and border in Firefox 4+
*/

.Button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.Button:hover:not(.is-disabled),
.Button:focus:not(.is-disabled),
.Button:active:not(.is-disabled) {
  text-decoration: none;
}

.Button:hover::not(.is-disabled) {
  color: #fff;
}

.Button--default {
  border: solid 4px #F8C41C;
}

.Button--default:hover:not(.is-disabled) {
  background-color: #F8C41C;
}

.Button--action {
  border: solid 4px #c2c2c2;
}

.Button--action:hover:not(.is-disabled) {
  background-color: #c2c2c2;
}

.Button:disabled,
.Button.is-disabled {
  cursor: default;
  opacity: 0.5;
}

/*------Comment------*/

/* wrapper comment issue */

.comment + .comment {
  margin-top: 1em;
}

.comment:after {
  content: "";
  display: table;
  clear: both;
}

/* case form */

.comment--form {
  padding-top: 2em;
  margin: 2em 0 0;
}

.comment__avatar,
.comment__body {
  float: left;
}

@media all and (max-width: 61.865em) {
  .comment__avatar {
    display: none;
  }
}

.comment__body {
  margin-left: .8em;
  position: relative;
}

/* Caret */

.comment__body--caret:after {
  position: absolute;
  content: "";
  width: 18px;
  height: 18px;
  top: 15px;
  left: -9px;
  background-color: #f0f0f0;
  border-color: #c2c2c2;
  border-style: solid;
  border-width: 0px 0px 1px 1px;
  -webkit-transform: rotate(45deg);
  -moz-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  -o-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* case form */

.comment--form .comment__body--caret:after {
  background-color: #fff;
}

.comment__avatar img {
  width: 59px;
  height: 56px;
}

.comment__header {
  border-radius: 10px 10px 0 0;
  background-color: #F0F0F0;
  padding: .8em 1em;
  margin: 0 -1em;
}

/* comment texte */

.comment__content {
  overflow: hidden;
  word-wrap: break-word;
  padding: .5em 0 0;
}

/* img */

.comment__content img {
  max-width: 100%;
  max-height: 100%;
}

/* blockquote */

.comment__content blockquote {
  border-left: 4px solid #FBC55F;
  padding: 0px 1em;
  margin: 1em 0px;
  color: #6a6a6a;
}

/* GitHub username */

.comment__content .github__username {
  font-weight: bold;
}

.comment__wrapper {
  position: relative;
  width: 650px;
  /*last 256px*/
  min-height: 128px;
  border: solid 1px #c2c2c2;
  border-radius: 10px;
  padding: 0 1em 2em 1em;
  word-wrap: break-word;
  background: #fff;
}

/* img attach file */

.comment__attach {
  display: block;
  margin: .8em 0 0 0;
  padding: .4em;
  text-align: center;
  overflow: hidden;
}

@media all and (max-width: 48.115em) {
  /* Issues view */

  .comment__wrapper,
  .comment__body {
    width: 100%;
  }
}

/* prevent width of img */

.comment__attach img {
  width: 100%;
  max-width: 100%;
}

/* comment with header */

.comment--form  .comment__wrapper {
  padding-top: 1em;
}

/* name of owner */

.comment__owner {
  font-weight: bold;
}

/* drag and drop */

.comment__drag {
  position: relative;
}

.comment__dd {
  position: absolute;
  bottom: .6em;
  width: 100%;
  text-align: center;
  color: #c2c2c2;
  font-size: .8em;
  z-index: 2;
  font-weight: bold;
}

.comment__dd__label {
  color: #e6bf04;
}

/* Textarea Placeholder style */

.comment__wrapper::-webkit-input-placeholder {
  color: #c2c2c2;
  opacity: 1;
  font-size: 1.2em;
  font-weight: 500;
}

.comment__wrapper:-moz-placeholder {
  /* Firefox 18- */
  color: #c2c2c2;
  opacity: 1;
  font-size: 1.2em;
  font-weight: 500;
}

.comment__wrapper::-moz-placeholder {
  /* Firefox 19+ */
  color: #c2c2c2;
  opacity: 1;
  font-size: 1.2em;
  font-weight: 500;
}

comment__wrapper:-ms-input-placeholder {
  color: #c2c2c2;
  opacity: 1;
  font-size: 1.2em;
  font-weight: 500;
}

.comment__button {
  text-align: right;
  margin: 1.2em 0 0;
}

@media all and (max-width: 48.115em) {
  .comment__button {
    text-align: center;
  }
}

.comment__button .button {
  text-align: center;
}

/*----------Layout----------*/

/* Body */

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/*----------Global Styles----------*/

html {
  font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-weight: 300;
  color: #404040;
}

/* min max class */

.wc-viewport {
  min-width: 320px;
  min-width: 20rem;
  max-width: 1920px;
  max-width: 120rem;
  margin: 0 auto;
}

.wc-content {
  position: relative;
  width: 1180px;
  margin: 0 auto;
  padding-left: 5em;
  padding-right: 5em;
}

.wc-content--body {
  padding-top: 2em;
  padding-bottom: 2em;
}

.wc-content--footer {
  padding-top: 1em;
  padding-bottom: 1em;
}

.wc-content:after {
  content: "";
  display: table;
  clear: both;
}

@media all and (max-width: 73.74em) {
  .wc-content {
    width: auto;
    padding-left: 1em;
    padding-right: 1em;
  }
}

/*----------Global H Styles----------*/

h1 {
  font-size: 3.5em;
  font-weight: 700;
}

h2 {
  font-size: 2em;
  font-weight: 600;
}

h3 {
  font-size: 1.5em;
}

h4 {
  font-size: 1.25em;
}

p {
  font-size: 1em;
}

/*----------Link Styles----------*/

a {
  color: #000;
}

a:hover,
a:focus {
  color: #000;
  outline: none;
  text-decoration: underline;
}

/*---------- Header ----------*/

.header {
  background: #FBC55F;
  padding: 0.5em 0;
}

.nav__logo {
  height: 20px;
  vertical-align: middle;
}

.nav--big .nav__logo {
  height: 55px;
}

.nav__section {
  display: inline-block;
  width: 50%;
}

.nav__section--left {
  text-align: left;
}

.nav__section--right {
  text-align: right;
}

.nav__link {
  display: inline-block;
  color: #fff;
}

.nav__link:hover {
  color: #fff;
}

.nav__link--left {
  padding-left: 6em;
}

.nav__link--right {
  padding-right: 7em;
}

@media all and (max-width: 28.115em) {
  .nav__link--left {
    padding-left: 0;
  }

  .nav__link--right {
    padding-right: 0;
  }
}

@media all and (max-width: 28.115em) {
  .nav.container {
    padding-left: 1em;
    padding-right: 1em;
  }
}

@media all and (max-width: 20.615em) {
  .nav__link {
    font-size: .8em;
  }
}

.header .container {
  background-image: none !important;
}

.nav__avatar {
  height: 20px;
  display: inline-block;
  border-radius: 3px;
  vertical-align: middle;
  margin-left: .3em;
}

.nav--big .nav__avatar {
  height: 55px;
}

@media all and (max-width: 20.615em) {
  .nav__avatar {
    display: none;
  }
}

/*----------Footer ----------*/

.footer {
  background-color: #ffffff;
  border-top: 5px solid #F8C41C;
  clear: both;
}

@media all and (max-width: 28.115em) {
  .footer {
    margin-top: 3em;
  }
}

.footer .container {
  padding: 1em 3em 1em;
}

.footer .follow {
  font-weight: 700;
}

.footer__section {
  list-style: none;
}

.footer__section--left {
  float: left;
}

.footer__section--right {
  float: right;
}

.footer__item {
  display: inline-block;
}

.footer__section--left .footer__item {
  padding: 0.75em 0.75em 0.75em 0;
}

.footer__section--right .footer__item {
  padding: 0.75em 0 0.75em 0.75em;
}

.footer__section--left a {
  margin-right: 1em;
}

@media all and (max-width: 37.49em) {
  .footer__item {
    display: block;
  }
}

@media all and (max-width: 59.365em) {
  .footer__item {
    font-size: 0.75em;
  }
}

@media all and (max-width: 23.4275em) {
  .footer__section--left,
  .footer__section--right {
    float: none;
    margin: 0;
  }
}

@media all and (max-width: 23.4275em) {
  .footer__section--right  .footer__item {
    padding-left: 0;
  }
}

/*---------- Utils ----------*/

.wc-bold {
  font-weight: 700;
}

/*--------Flash Messages---------*/

.flash {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  opacity: 0.8;
  background-color: white;
  padding: 0.5em 1em;
  text-align: center;
  color: #000;
}

.error {
  color: #fff;
  background-color: rgba(255, 89, 89, 0.92);
}

/*----------page----------*/

/*------Home view------*/

.divider {
  font-weight: 700;
  border-top: 5px solid #F8C41C;
  width: 30px;
  margin-left: 5em;
  color: #fff;
}

/*--------Homepage Styles--------*/

#hero {
  background-color: #F8C41C;
  text-align: left;
  color: #fff;
  padding: 0;
}

#hero .wc-home {
  background: url(../img/LightBulbHero.png) no-repeat right top;
  background-origin: content-box;
}

@media all and (max-width: 48.115em) {
  #hero .wc-home {
    background-size: 18%;
  }
}

@media all and (max-width: 28.115em) {
  #hero .wc-home {
    background: none;
  }
}

#maintitle {
  padding-top: 6em;
  padding-bottom: 6em;
}

@media all and (max-width: 28.115em) {
  #maintitle {
    padding-top: 3em;
    padding-bottom: 3em;
  }
}

#maintitle h1 {
  text-shadow: -1px -1px 0px rgba(0,0,0,.25);
}

@media all and (max-width: 48.115em) {
  #maintitle h1 {
    font-size: 3em;
  }
}

#report-bug {
  display: inline-block;
  position: relative;
  top: 1em;
  font-size: 2em;
  color: #fff;
  text-decoration: none !important;
  -webkit-transition: top 100ms ease-out 0ms;
  -moz-transition: top 100ms ease-out 0ms;
  -o-transition: top 100ms ease-out 0ms;
  transition: top 100ms ease-out 0ms;
}

/*icon */

#report-bug .icon {
  width: 1.15em;
  height: 1.15em;
  line-height: 1.15em;
  margin-left: .3em;
  background-color: #fff;
  color: #F8C41C;
  border-radius: 50%;
  -webkit-transition: all 0.3s linear 0s;
  -moz-transition: all 0.3s linear 0s;
  -o-transition: all 0.3s linear 0s;
  transition: all 0.3s linear 0s;
}

/* hover a icon */

#report-bug:hover .icon {
  background-color: #F8C41C;
  color: #fff;
  -webkit-transition: all 0.3s linear 0s;
  -moz-transition: all 0.3s linear 0s;
  -o-transition: all 0.3s linear 0s;
  transition: all 0.3s linear 0s;
}

/* hover a - icon down */

#report-bug:hover .icon:before {
  content: "\e602";
}

/* open a - icon down*/

#report-bug.opened .icon:before {
  /*transform:rotate(90deg);*/
  content: "\e602";
}

/* hover open a - icon up */

#report-bug.opened:hover .icon:before {
  /*transform:rotate(90deg);*/
  content: "\e600";
}

#report-bug.opened {
  top: 2em;
  -webkit-transition: top 100ms ease-out 0ms;
  -moz-transition: top 100ms ease-out 0ms;
  -o-transition: top 100ms ease-out 0ms;
  transition: top 100ms ease-out 0ms;
}

@media all and (max-width: 28.115em) {
  #report-bug.opened {
    top: 1.25em;
  }
}

#report-bug:hover,
#report-bug:focus {
  padding-left: 0;
  color: #fff;
}

#lightbulb {
  padding: 0 5em;
}

#lightbulb img {
  margin: 0 auto;
  display: block;
  height: 80%;
}

#arrow {
  height: 1.15em;
  vertical-align: middle;
}

.form-opened {
  display: block;
}

.form-closed {
  display: none;
}

/*-------Browse Issues------*/

#browse-issues-wrapper {
  background-color: #f0f0f0;
}

#browse-issues h2 {
  display: inline;
  margin-right: 0.5em;
}

.key {
  position: relative;
  bottom: 0.1em;
}

@media all and (max-width: 48.115em) {
  .key {
    display: block;
    margin-top: 1em;
  }
}

.key span {
  padding: 0.3em 1em;
}

@media all and (max-width: 61.865em) {
  .key span {
    padding: 0 0 0 0.5em;
  }
}

.issues {
  background-color: #fff;
  padding: 0.5em 1em;
  margin-bottom: 1em;
}

.issue-contactready {
  border-left: 5px solid #a1ebbf;
}

.issue-needs-diagnosis {
  border-left: 5px solid #ff8364;
}

.issue-closed {
  border-left: 5px solid #6FC7FA;
}

.issue-number {
  font-weight: 400;
}

.issue-title {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-bottom: 0.5em;
}

.issue-metadata {
  font-size: 12px;
}

.more-issues {
  margin-bottom: -23em;
  text-align: center;
  clear: left;
}

#my-issues h3 {
  padding-left: 15px;
  padding-right: 15px;
}

/*---Search on Github---*/

input[type=search] {
  float: left;
  padding: 2em 3em;
  background-color: transparent;
  border: none;
  cursor: pointer;
  color: #fdf3dd;
}

#howitworks,
#join,
#browse-issues {
  padding-top: 3em;
  padding-bottom: 3em;
}

#browse-issues {
  padding-bottom: 2em;
}

#threesteps {
  padding: 1em 0;
}

#join p {
  padding: 1em 0;
  line-height: 150%;
}

#join img {
  width: 50px;
  margin-right: 1em;
  display: table-cell;
}

@media all and (max-width: 28.115em) {
  #howitworks,
  #join,
  #browse-issues {
    padding: 2em 1em;
  }
}

#threeways {
  vertical-align: top;
}

.bignumber {
  font-size: 2em;
  font-weight: 700;
  padding: 0.2em 0.75em 0.5em 0.5em;
  display: table-cell;
}

@media all and (max-width: 59.365em) {
  .bignumber {
    padding-right: 0.5em;
  }
}

@media all and (max-width: 48.115em) {
  .bignumber {
    padding-bottom: 0;
  }
}

#join img,
.bignumber {
  float: left;
}

.bignumber + p,
#threeways img + p {
  padding: 0.6em;
  display: table-cell;
}

.maincontent {
  text-align: left;
  padding: 2em 5em;
}

/*------Forms-------*/

textarea {
  overflow: auto;
}

label,
.label {
  color: #000;
  margin-bottom: 5px;
  font-weight: 700;
  font-size: inherit;
}

label {
  float: left;
}

@media all and (max-width: 61.865em) {
  label {
    float: none;
  }
}

.label {
  padding-left: 0;
}

#new-report h2 {
  font: #fff;
  margin-left: 0;
  margin-bottom: 1em;
}

.form-control {
  border-radius: 20px;
  padding: 0.5em;
}

form .button {
  margin-top: 0.25em;
  margin-bottom: 0.5em;
  padding-top: 0.25em;
  padding-bottom: 0.25em;
}

#submitanon {
  float: left;
}

#submitgithub {
  float: right;
  margin: 0 auto;
}

#submitdiv {
  display: block;
  font-weight: 700;
  border-top: 5px solid #F8C41C;
  width: 30px;
  margin: 1em 0 0;
  color: #fff;
  display: block;
}

.row {
  padding: .5em;
}

.row:last-child p:not(.issue-metadata) {
  margin-bottom: 0.5em;
  color: #000;
}

/* bootstrap overrides */

.radio-inline,
.checkbox-inline {
  /* Hack to get Chrome 24+ to behave.
  See https://github.com/twbs/bootstrap/issues/6599 */
  white-space: nowrap;
}

.radio,
.radio-inline {
  padding-left: 15px;
  margin-right: 8px;
  margin-left: 8px;
  width: 100%;
  height: 34px;
  position: relative;
}

.radio label,
.radio-inline label {
  font-weight: 300;
  float: none;
}

.radio input,
.radio-inline input {
  position: absolute;
  left: 10px;
  top: 0px;
}

/* bootstrap override */

.radio-inline + .radio-inline {
  margin-left: 8px;
}

#site-owner {
  display: block;
  text-align: left;
}

/* `ruby -e 'puts "skcah top yenoh".reverse'` */

.col-dm-12 {
  display: none !important;
}

/*------Form Validation------*/

.has-error .form-control {
  border-color: #ff0000;
}

.has-error .form-control:focus {
  border-color: #ff0000;
  box-shadow: none;
}

.has-error .help-inline {
  color: #ff0000;
  float: right;
}

@media all and (max-width: 37.49em) {
  .flourish {
    display: none;
  }

  .submit {
    float: left;
    margin: 0 0 1em;
  }

  .col-md-6.submit,
  .col-md-6 button {
    width: 100%;
  }

  .has-error .help-inline {
    float: none;
    display: block;
  }
}

.validation-wrapper {
  display: block;
  clear: both;
  position: relative;
}

.validation-wrapper::after {
  content: '';
  display: block;
  width: 60px;
  height: 20px;
  position: absolute;
  right: 12px;
  top: 8px;
  background-repeat: no-repeat;
  background-size: contain;
}

.validation-wrapper input {
  padding-right: 40px;
}

.no-error .validation-wrapper::after {
  background-image: url(../img/valid.svg);
}

.has-error .validation-wrapper::after {
  background-image: url(../img/invalid.svg);
}

.no-error .help-inline {
  display: none;
}

.no-error .form-control {
  border-color: #F8C41C;
}

.no-error .form-control:focus {
  border-color: #F8C41C;
  box-shadow: none;
}

.disabled {
  opacity: 0.5;
}

@media all and (max-width: 20.615em) {
  .row {
    margin-left: -20px;
    max-width: 320px;
  }
}

/*------Issues view------*/

.issue {
  display: none;
}

/* Wrapper title and date issue */

.issue__main_title {
  line-height: 1em;
  margin-bottom: .5em;
  word-wrap: break-word;
}

.issue__title {
  display: inline-block;
  vertical-align: middle;
}

/* btn back /index */

.issue__back {
  display: inline-block;
  vertical-align: middle;
  margin: 0 .8em 0 0;
}

@media all and (max-width: 28.115em) {
  .issue__back {
    display: block;
    margin-bottom: .3em;
  }
}

.issue__back:hover {
  text-decoration: none;
}

.issue__back .icon {
  display: inline-block;
  width: 1.25em;
  height: 1.25em;
  line-height: 1.25em;
  text-align: center;
  background-color: #c2c2c2;
  color: #fff;
  border-radius: 50%;
  -webkit-transition: all 0.3s linear 0s;
  -moz-transition: all 0.3s linear 0s;
  -o-transition: all 0.3s linear 0s;
  transition: all 0.3s linear 0s;
}

.issue__back:hover .icon {
  background-color: #404040;
  -webkit-transition: all 0.3s linear 0s;
  -moz-transition: all 0.3s linear 0s;
  -o-transition: all 0.3s linear 0s;
  transition: all 0.3s linear 0s;
}

/* wrapper isssue */

.issue__wrapper {
  margin: 0 0 0 4.2em;
}

@media all and (max-width: 73.74em) {
  /* Issues view */

  .issue__wrapper {
    margin: 0;
  }
}

.issue__create {
  font-size: 1.2em;
  margin: 0 0 2em;
}

/* State issue */

.issue__state {
  display: inline-block;
  padding: 7px 23px;
  color: #fff;
}

/*Needs Diagnosis*/

.issue__state--need {
  background-color: #ff8364;
}

/*Ready for Outreach*/

.issue__state--ready {
  background-color: #a1ebbf;
}

/*Site wait*/

.issue__state--sitewait {
  background-color: #006B75;
}

/*Close*/

.issue__state--close {
  background-color: #6FC7FA;
}

.issue__date {
  display: inline-block;
}

.issue__reporter {
  font-weight: bold;
}

/* container details issue */

.issue__details {
  word-wrap: break-word;
  overflow: hidden;
}

.issue__details strong {
  font-weight: bold !important;
}

.issue__details img {
  max-width: 100%;
  max-height: 100%;
}

.issue__details code,
.comment__content code {
  font-family: monospace;
  font-size: 90%;
}

.issue__details p > code,
.comment__content p > code {
  color: inherit;
  background-color: #F5F5F5;
  padding: 0.25em;
}

/* temp hack to hide <!-- browser info --> */

.issue__details > p:first-child {
  display: none;
}

.issue__login_link {
  margin-top: 2.5em;
  text-align: center;
}

.issue__label:after {
  display: table;
  content: "";
  clear: both;
}

/* value of label */

/*.issue__label__value {
  font-size: 1.2em;
  float: left;
}*/

/* label item */

.issue__label_item {
  display: inline-block;
  vertical-align: middle;
  line-height: 1;
  color: #fff;
  border-radius: 4px;
  padding: 0.4em;
  font-size: .7em;
  font-weight: bold;
}

/* Labels */

.issue__label_item--title {
  font-size: 1.2em;
  margin-right: .3em;
  color: #000;
}

/* btn add label */

.issue__label__btn {
  float: left;
  margin-left: 1.2em;
  font-size: 1.2em;
  color: #c2c2c2;
}

/*wrapper list comment */

.issue__comment {
  margin: 4em 0 0;
}

/*------Internal Pages : about/thanks/contributors------*/

.page {
  background-color: #fff;
}

.page h2 {
  margin-bottom: 1em;
}

.page h4 {
  margin: 0.75em 0 1em;
  font-weight: 700;
}

.page p {
  line-height: 150%;
  margin-bottom: 1em;
}

.page ol {
  line-height: 150%;
  margin: 1.25em 0;
}

@media all and (max-width: 28.115em) {
  .page ol {
    margin: 1.25em 0 1.25em 1.25em;
  }
}

.page li {
  margin-bottom: 1em;
}

.page strong {
  font-weight: 500;
}

/*------Pattern Portfolio view------*/

.portfolio {
  margin: 2em 0;
  border: solid 1px transparent;
}

h2 {
  border-bottom: 1px solid #EEE;
}

code {
  display: inline-block;
  vertical-align: middle;
  border: 1px solid #DDD;
  margin: -1px 0px;
  padding: 0.25em;
  font-weight: bold;
  background: #fafafa;
  border-radius: 0.25em;
  line-height: 1;
}

.portfolio_color {
  display: inline-block;
  width: 200px;
  height: 40px;
  vertical-align: middle;
  margin: 0 0 20px 0;
}


/*# sourceMappingURL=data:application/json;base64, */